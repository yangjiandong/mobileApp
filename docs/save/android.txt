android
=======

2012.08.02
----------

   1. bluetooth
   bluethoth.txt

2012.08.01
----------

   1. Professional_Android_Application_Development
   直接取资源
   p84

   dynamically updating menu items
   p128

   2. 自定义控件,颜色提取器
   git://github.com/commonsguy/cwac-colormixer.git

2012.07.31
----------

   1. Support Package
   android-support-v4.jar

2012.07.30
----------

   1. android程序开机自启动

--广播接收器
public class HippoStartupIntentReceiver extends BroadcastReceiver{

    @Override
    public void onReceive(Context context, Intent intent) {
        context.startService(new Intent(context,VersionUpdateService.class));
    }

}
<!-- 广播开始 -->
<receiver android:name=".broadcast.HippoStartupIntentReceiver" >
     <intent-filter >
          <action android:name="android.intent.action.BOOT_COMPLETED" />

          <category android:name="android.intent.category.HOME" />
     </intent-filter>
</receiver>
--AndroidManifest.xml加入权限
<uses-permission android:name="android.permission.RECEIVE_BOOT_COMPLETED"/>

2012.07.20
----------

   1. SparseArray vs Hashmap
   http://mobile.dzone.com/articles/tweaking-your-android
   In Android (and mobile programming in general) having more than 10,000 objects in a data structure in memory seems to be an upper limit.
   For smaller arrays (under 1,000) the performance of the SparseArray and the Hashmap are very comparable
   For arrays larger than 10,000, if you are adding more than retrieving elements, try the SparseArray.
   For arrays larger than 100,000, give the SparseArray a shot… or fix your application design so you don’t have any insanely large in-memory data structures.

   2. android maven eclipse
   https://github.com/github/android/wiki/Building-From-Eclipse

2012.07.19
----------

   1. 让控件在父容器中居中
   android:layout_gravity= "center_vertical"

   在布局中使用scrollview
 　把原来的布局用
   android:layout_width="fill_parent"
   android:layout_height="wrap_content"
   android:scrollbars="none">括起来即可实现视图的滚动。

2012.07.16
----------

   1. activity back home 键
   android的手机的back键默认行为是finish处于前台的Activity的即Activity的状态为Destroy状态，
   再次启动该Activity是从onCreate开始的。
   而Home键默认是stop前台的Activity即状态为onStop而不是Destroy,若再次启动它，则是从OnResume开始的，即会保持上次Activityd的状态。
   back键也有例外的，按back键不会关闭Activity的，比如播放音乐，按了back键之后仍可以继续播放音乐，这是Music这支ap已经重写了back键的事件处理。

2012.07.14
----------

   1. Elipse关联Android源码
     a下载Android源码
          下面有Android 2.1的源码，只有约7M
          更多版本下载 http://repository.grepcode.com/java/ext/com/google/android/android/
     b解压源码，将文件夹命名为sources,再拷贝到<android-sdk-windows>/platforms/对应版本中，
          如<android-sdk-windows>/platforms/android-7
     现在打开Eclipse,选中某个Android类，按Ctrl，单击鼠标，跳转到相关类中，前提是<android-sdk-windows>/platforms/项目版本中有源码。

   2. HierarchyView能深入全面的理解xml布局文件，更可以通过它来学习别人优秀的布局技巧。下面是一些基本使用步骤:
     启动模拟器。
     到androidtools目录下，双击可以启动hierarchyviewerbat文件，打开一个图形界面。
     点击 load View hierarchy按钮，就可以捕获模拟器当前activity的画面布局信息。
     ierarchy通过树形结构展示布局形式。双击树节点可以展示单独的UI部分。
     当模拟器activity画面改变后，点击““refresh””可以加载新的页面布局信息。

2012.07.12
----------

   1. activity 初始不弹出输入软键盘
   android:windowSoftInputMode="adjustUnspecified|stateHidden"
   android:configChanges="orientation|keyboardHidden"

   ecitText 输入时还会弹出,另找方法
    //屏蔽输入法
    private void d(View v){
        InputMethodManager manager = (InputMethodManager) LogonActivity.this
                .getSystemService(INPUT_METHOD_SERVICE);
        manager.hideSoftInputFromWindow(v.getWindowToken(), 0);
        //activity:
        //android:windowSoftInputMode="adjustUnspecified|stateHidden"
        //android:configChanges="orientation|keyboardHidden"
    }

   //EditText有焦点（focusable为true）阻止输入法弹出
   editText.setOnTouchListener(new OnTouchListener() {
            public boolean onTouch(View v, MotionEvent event) {
                editText.setInputType(InputType.TYPE_NULL); // 关闭软键盘
                return false;
            }
   //当EidtText无焦点（focusable=false）时阻止输入法弹出
   InputMethodManager imm = (InputMethodManager)getSystemService(INPUT_METHOD_SERVICE);
   imm.hideSoftInputFromWindow(editText.getWindowToken(), 0);

2012.07.09
----------

   1. Windows DOS窗口中输入adb shell后，会出现如下错误：
   adb server is out of date.
   killing... ADB server didn't ACK * failed to start daemon * error: unknown host service，
   or
   could not read ok from adb server

   出现这问题是因为你的电脑上安装了豌豆夹造成的，只需打开“任务管理器”，找到'wandoujia_helper.exe'，把这个进行终止掉就可以

2012.07.05
----------

   1. android 资源文件规范
   20120706.txt

   2. 签名发布
   201207062.txt

2012.07.04
----------

   1. android 小知识
   http://linkinmama-gmail-com.iteye.com/blog/1569052
   20120704.txt

2012.07.03
----------

   1. train

   http://www.vogella.com/articles/AndroidLocationAPI/article.html

   2. 系统自带样式
•android:theme="@android:style/Theme.Dialog"   将一个Activity显示为对话框模式
•android:theme="@android:style/Theme.NoTitleBar"  不显示应用程序标题栏
•android:theme="@android:style/Theme.NoTitleBar.Fullscreen"  不显示应用程序标题栏，并全屏
•android:theme="@android:style/Theme.Light"  背景为白色
•android:theme="@android:style/Theme.Light.NoTitleBar"  白色背景并无标题栏
•android:theme="@android:style/Theme.Light.NoTitleBar.Fullscreen"  白色背景，无标题栏，全屏
•android:theme="@android:style/Theme.Black"  背景黑色
•android:theme="@android:style/Theme.Black.NoTitleBar"  黑色背景并无标题栏
•android:theme="@android:style/Theme.Black.NoTitleBar.Fullscreen"    黑色背景，无标题栏，全屏
•android:theme="@android:style/Theme.Wallpaper"  用系统桌面为应用程序背景
•android:theme="@android:style/Theme.Wallpaper.NoTitleBar"  用系统桌面为应用程序背景，且无标题栏
•android:theme="@android:style/Theme.Wallpaper.NoTitleBar.Fullscreen"  用系统桌面为应用程序背景，无标题栏，全屏
•android:theme="@android:style/Translucent" 半透明效果
•android:theme="@android:style/Theme.Translucent.NoTitleBar"  半透明并无标题栏
•android:theme="@android:style/Theme.Translucent.NoTitleBar.Fullscreen"  半透明效果，无标题栏，全屏
•android:theme="@android:style/Theme.Panel"
•android:theme="@android:style/Theme.Light.Panel"

   --END